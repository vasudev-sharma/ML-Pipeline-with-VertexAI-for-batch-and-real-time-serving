# More examples of Codefresh YAML can be found at
# https://codefresh.io/docs/docs/yaml-examples/examples/

# TODO: Fix codefresh.yml not updating

version: "1.0"
# Stages can help you organize your steps in stages
stages:
  - "clone"
  - "build"
  - "linting-formatting"
  - "test"
  - "deployment"

steps:
  clone:
    title: "Cloning repository"
    type: "git-clone"
    repo: "vasudev-sharma/skipTheDishes_ML_challenge"
    # CF_BRANCH value is auto set when pipeline is triggered
    # Learn more at codefresh.io/docs/docs/codefresh-yaml/variables/
    revision: "${{CF_BRANCH}}"
    git: "vasu_ci_cd"
    stage: "clone"

  build:

    title: "Building Docker image"
    type: "build"
    # image_name: "vasudevsharma/skip-the-dishes"
    image_name: "us-central1-docker.pkg.dev/keen-airlock-455922-q4/skip-the-dishesv2"
    working_directory: "${{clone}}"
    # tag: "${{CF_BRANCH_TAG_NORMALIZED}}"
    tag: "latest"
    # registry: "us-central1-docker.pkg.dev"
    dockerfile: "Dockerfile"
    stage: "build"

  
  ###############################
  # Linting and formatting
  ###############################
  install-tools:
    title: "Install tools"
    image: python:3.9-slim # TODO: Decide if that should be image or not
    stage: "linting-formatting"
    commands: 
      - python -m pip install --upgrade pip
      - pip install pylint bandit mypy flake8

  fake8-check:
    title: "Flake 8 check"
    image: python:3.9-slim
    stage: "linting-formatting"
    commands:
      - flake8 . --exit-zero > flake8-report.txt

  pylint-check:
    title: "Pylint code Quality"
    image: python:3.9-slim
    stage: "linting-formatting"
    commands:
      - pylint **/*.py --exit-zero
  
  bandit-scan:
    title: "Bandit Security Scan"
    stage: "linting-formatting"
    image: python:3.9-slim
    commands:
      - bandit -r . -f txt


  mypy-check:
    title: "Mypy Type Checking"
    stage: "linting-formatting"
    image: python:3.9-slim
    commands:
      - mypy . --check-untyped-defs > mypy-report.txt


  
  ###############################
  # Testing
  ###############################



  test:
    title: "Running test"
    type: "freestyle" # Run any command
    image: "ubuntu:latest" # The image in which command will be executed
    working_directory: "${{clone}}" # Running command where code cloned
    commands:
      - "ls"
    stage: "test"


 
  ###############################
  # Deployment
  ###############################

  push_to_registry:
    title: "Push production image to Docker Hub"
    stage: "deployment"
    type: push
    candidate: '${{build}}'
    tag: 'prod'
    image_name: "vasudevsharma/skip-the-dishes"